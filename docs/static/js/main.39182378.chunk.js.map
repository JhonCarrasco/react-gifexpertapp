{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","urlApi","encodeURI","fetch","resp","json","data","gifs","map","item","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAACC,GAAW,IAC3BC,EAAkBD,EAAlBC,cAD0B,EAEEC,mBAAS,IAFX,mBAE3BC,EAF2B,KAEfC,EAFe,KAkBlC,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAnBkB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,sEAIA,mCACTC,EALS,iDAK2CC,UAAWH,GALtD,6BAIA,oCAJA,SAMMI,MAAOF,GANb,cAMTG,EANS,gBAOQA,EAAKC,OAPb,uBAOPC,EAPO,EAOPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAS,IAAD,EAC3B,MAAQ,CACJC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,IAAG,UAAEH,EAAKI,cAAP,aAAE,EAAaC,iBAAiBF,QAb5B,kBAiBRL,GAjBQ,2DAsBR,IAtBQ,0DAAH,sDCAPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGrC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAML,EAAMM,IAAMP,IACvB,kCAAMA,EAAN,WCJCQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WAENzB,EAASC,GAAWyB,MAAM,SAAAC,GAEtBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAIlB,CAACrB,IAEGsB,EDhB2BK,CAAc3B,GAAlCc,EAFuB,EAE7BP,KAAcc,EAFe,EAEfA,QAEtB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDjB,IAEhDqB,GAAW,wCAEf,qBAAKJ,UAAU,YAAf,SAGQH,EAAOL,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEKA,GADCA,EAAKC,aEflBiB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,gBAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAK9B,OACI,gCACI,iDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAKQS,EAAWe,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCnB9B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.39182378.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = (props) => {\r\n    const { setCategories } = props\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault()\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( categories => [inputValue, ...categories])\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    try {\r\n\r\n        const apiKey = 'zd1vrBqsmUqfhjSNG9D2jvH5sMIzygxR';\r\n        const urlApi = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=${apiKey}`\r\n        const resp   = await fetch( urlApi );\r\n        const { data } = await resp.json(); \r\n\r\n        const gifs = data.map( item => {\r\n            return  {\r\n                id: item.id,\r\n                title: item.title,\r\n                url: item.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs \r\n\r\n    } catch (error) {\r\n        // manejo del error\r\n        // console.error(error)\r\n        return []\r\n    }\r\n    \r\n    \r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    // console.log({ id, title, url })\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data: images, loading } = useFetchGifs( category )\r\n        \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n        {\r\n            loading && <p>Loading</p>\r\n        }\r\n        <div className=\"card-grid\">\r\n                        \r\n            {\r\n                images.map((item) => \r\n                    <GifGridItem \r\n                    key={ item.id } \r\n                    { ...item }\r\n                    /> )\r\n            }\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category ).then( imgs => {\r\n            \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n        \r\n    }, [category])\r\n\r\n    return state // { data: [], loading: true }\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n        \r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp...</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            {/* <button onClick={ handleAdd }>Guardar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    // categories.map( (category, index) => {\r\n                    //     return <li key={ category }>{ category }</li>\r\n                    // })\r\n                    categories.map( category => \r\n                    <GifGrid \r\n                        key={ category }\r\n                        category={ category }/>)\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}